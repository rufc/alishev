import Packet28.Person;

public class Test28 {
//    Модификаторы доступа
//    public - разрешает доступ к полю методу классу везде в проекте
//    private - доступ только в пределах того класса, где это поле декларировано
//    default - если не указываем модификатор доступа, то используется default по умолчанию.
//    Всё, что default доступно в пределах этого пакета.
//    Protected - доступны в пределах этого пакета, доступны всем подклассам,
//    даже если эти подклассы вне пакета, где эти поля и методы были декларированы.
//    Class может быть либо public, либо default по умолчанию
//    Class который совпадает с названием нашего Java файла обязательно должен быть публичным,
//    то есть в одном Java файле должен быть хотя бы один публичный класс
//    мы можем в этом же Java файле создать множество непубличных классов и их можно рассматривать как вспомогательные классы
//    в одном Java файле не мб сразу двух публичных классов, но может иметь множество непубличных классов.
//    Класс не мб private или protected
    public static void main(String[] args) {
        Person person1 = new Person();
        person1.name = "Mike";

//        Person p1 = new Person();
//        System.out.println(p1.name_protected); //видим ошибку, что name protected
//        но если мы наследуемся от класса Person:
//        public class Test28 extends Person {
//          ...
//    }
// то все его поля станут доступны в этом классе. таким образом мы получили доступ к полю name_protected за пределами пакета Packet28

    }
}
